// Copyright 1998-2016 Epic Games, Inc. All Rights Reserved.
/*===========================================================================
	C++ class header boilerplate exported from UnrealHeaderTool.
	This is automatically generated by the tools.
	DO NOT modify this manually! Edit the corresponding .h files instead!
===========================================================================*/

#include "ObjectBase.h"

PRAGMA_DISABLE_DEPRECATION_WARNINGS
struct FVector;
struct FTransform;
struct FPrintMoveStructCPP;
#ifdef GCODEVIEWER_MyBlueprintFunctionLibrary_generated_h
#error "MyBlueprintFunctionLibrary.generated.h already included, missing '#pragma once' in MyBlueprintFunctionLibrary.h"
#endif
#define GCODEVIEWER_MyBlueprintFunctionLibrary_generated_h

#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_46_GENERATED_BODY \
	friend GCODEVIEWER_API class UScriptStruct* Z_Construct_UScriptStruct_FPrintMoveStructCPP(); \
	static class UScriptStruct* StaticStruct();


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_RPC_WRAPPERS \
 \
	DECLARE_FUNCTION(execgetFloat32FromByteArray) \
	{ \
		P_GET_TARRAY(uint8,Z_Param_binaryData); \
		P_GET_PROPERTY(UIntProperty,Z_Param_startIndex); \
		P_FINISH; \
		*(float*)Z_Param__Result=UMyBlueprintFunctionLibrary::getFloat32FromByteArray(Z_Param_binaryData,Z_Param_startIndex); \
	} \
 \
	DECLARE_FUNCTION(execgetInt32FromByteArray) \
	{ \
		P_GET_TARRAY(uint8,Z_Param_binaryData); \
		P_GET_PROPERTY(UIntProperty,Z_Param_startIndex); \
		P_FINISH; \
		*(int32*)Z_Param__Result=UMyBlueprintFunctionLibrary::getInt32FromByteArray(Z_Param_binaryData,Z_Param_startIndex); \
	} \
 \
	DECLARE_FUNCTION(execparseBinarySTL) \
	{ \
		P_GET_TARRAY(uint8,Z_Param_binaryData); \
		P_GET_PROPERTY(UIntProperty,Z_Param_startingIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_linesToParse); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_vertexArray); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_normalArray); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_newIndex); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UMyBlueprintFunctionLibrary::parseBinarySTL(Z_Param_binaryData,Z_Param_startingIndex,Z_Param_linesToParse,Z_Param_Out_vertexArray,Z_Param_Out_normalArray,Z_Param_Out_newIndex); \
	} \
 \
	DECLARE_FUNCTION(execloadBinarySTL) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_FullFilePath); \
		P_GET_TARRAY_REF(uint8,Z_Param_Out_binaryData); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_triangleCount); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UMyBlueprintFunctionLibrary::loadBinarySTL(Z_Param_FullFilePath,Z_Param_Out_binaryData,Z_Param_Out_triangleCount); \
	} \
 \
	DECLARE_FUNCTION(execextrudeTransform) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_startPoint); \
		P_GET_STRUCT(FVector,Z_Param_endPoint); \
		P_GET_STRUCT(FVector,Z_Param_modelCentre); \
		P_FINISH; \
		*(FTransform*)Z_Param__Result=UMyBlueprintFunctionLibrary::extrudeTransform(Z_Param_startPoint,Z_Param_endPoint,Z_Param_modelCentre); \
	} \
 \
	DECLARE_FUNCTION(execgetNewCoordinate) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_gcodeLine); \
		P_GET_STRUCT(FVector,Z_Param_lastPoint); \
		P_GET_UBOOL_REF(Z_Param_Out_success); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=UMyBlueprintFunctionLibrary::getNewCoordinate(Z_Param_gcodeLine,Z_Param_lastPoint,Z_Param_Out_success); \
	} \
 \
	DECLARE_FUNCTION(execparseGcode) \
	{ \
		P_GET_TARRAY(FString,Z_Param_gcodeArray); \
		P_GET_PROPERTY(UIntProperty,Z_Param_prevIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_linesPerTick); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_lastPoint); \
		P_GET_TARRAY(FPrintMoveStructCPP,Z_Param_moveStruct); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_newIndex); \
		P_GET_UBOOL_REF(Z_Param_Out_completed); \
		P_GET_PROPERTY_REF(UFloatProperty,Z_Param_Out_percentageProgress); \
		P_FINISH; \
		*(TArray<FPrintMoveStructCPP>*)Z_Param__Result=UMyBlueprintFunctionLibrary::parseGcode(Z_Param_gcodeArray,Z_Param_prevIndex,Z_Param_linesPerTick,Z_Param_Out_lastPoint,Z_Param_moveStruct,Z_Param_Out_newIndex,Z_Param_Out_completed,Z_Param_Out_percentageProgress); \
	} \
 \
	DECLARE_FUNCTION(execgetAxisCoordinateCPP) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_gcodeLine); \
		P_GET_PROPERTY(UStrProperty,Z_Param_axisPrefix); \
		P_GET_UBOOL_REF(Z_Param_Out_foundAxis); \
		P_FINISH; \
		*(float*)Z_Param__Result=UMyBlueprintFunctionLibrary::getAxisCoordinateCPP(Z_Param_gcodeLine,Z_Param_axisPrefix,Z_Param_Out_foundAxis); \
	}


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_RPC_WRAPPERS_NO_PURE_DECLS \
 \
	DECLARE_FUNCTION(execgetFloat32FromByteArray) \
	{ \
		P_GET_TARRAY(uint8,Z_Param_binaryData); \
		P_GET_PROPERTY(UIntProperty,Z_Param_startIndex); \
		P_FINISH; \
		*(float*)Z_Param__Result=UMyBlueprintFunctionLibrary::getFloat32FromByteArray(Z_Param_binaryData,Z_Param_startIndex); \
	} \
 \
	DECLARE_FUNCTION(execgetInt32FromByteArray) \
	{ \
		P_GET_TARRAY(uint8,Z_Param_binaryData); \
		P_GET_PROPERTY(UIntProperty,Z_Param_startIndex); \
		P_FINISH; \
		*(int32*)Z_Param__Result=UMyBlueprintFunctionLibrary::getInt32FromByteArray(Z_Param_binaryData,Z_Param_startIndex); \
	} \
 \
	DECLARE_FUNCTION(execparseBinarySTL) \
	{ \
		P_GET_TARRAY(uint8,Z_Param_binaryData); \
		P_GET_PROPERTY(UIntProperty,Z_Param_startingIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_linesToParse); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_vertexArray); \
		P_GET_TARRAY_REF(FVector,Z_Param_Out_normalArray); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_newIndex); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UMyBlueprintFunctionLibrary::parseBinarySTL(Z_Param_binaryData,Z_Param_startingIndex,Z_Param_linesToParse,Z_Param_Out_vertexArray,Z_Param_Out_normalArray,Z_Param_Out_newIndex); \
	} \
 \
	DECLARE_FUNCTION(execloadBinarySTL) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_FullFilePath); \
		P_GET_TARRAY_REF(uint8,Z_Param_Out_binaryData); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_triangleCount); \
		P_FINISH; \
		*(bool*)Z_Param__Result=UMyBlueprintFunctionLibrary::loadBinarySTL(Z_Param_FullFilePath,Z_Param_Out_binaryData,Z_Param_Out_triangleCount); \
	} \
 \
	DECLARE_FUNCTION(execextrudeTransform) \
	{ \
		P_GET_STRUCT(FVector,Z_Param_startPoint); \
		P_GET_STRUCT(FVector,Z_Param_endPoint); \
		P_GET_STRUCT(FVector,Z_Param_modelCentre); \
		P_FINISH; \
		*(FTransform*)Z_Param__Result=UMyBlueprintFunctionLibrary::extrudeTransform(Z_Param_startPoint,Z_Param_endPoint,Z_Param_modelCentre); \
	} \
 \
	DECLARE_FUNCTION(execgetNewCoordinate) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_gcodeLine); \
		P_GET_STRUCT(FVector,Z_Param_lastPoint); \
		P_GET_UBOOL_REF(Z_Param_Out_success); \
		P_FINISH; \
		*(FVector*)Z_Param__Result=UMyBlueprintFunctionLibrary::getNewCoordinate(Z_Param_gcodeLine,Z_Param_lastPoint,Z_Param_Out_success); \
	} \
 \
	DECLARE_FUNCTION(execparseGcode) \
	{ \
		P_GET_TARRAY(FString,Z_Param_gcodeArray); \
		P_GET_PROPERTY(UIntProperty,Z_Param_prevIndex); \
		P_GET_PROPERTY(UIntProperty,Z_Param_linesPerTick); \
		P_GET_STRUCT_REF(FVector,Z_Param_Out_lastPoint); \
		P_GET_TARRAY(FPrintMoveStructCPP,Z_Param_moveStruct); \
		P_GET_PROPERTY_REF(UIntProperty,Z_Param_Out_newIndex); \
		P_GET_UBOOL_REF(Z_Param_Out_completed); \
		P_GET_PROPERTY_REF(UFloatProperty,Z_Param_Out_percentageProgress); \
		P_FINISH; \
		*(TArray<FPrintMoveStructCPP>*)Z_Param__Result=UMyBlueprintFunctionLibrary::parseGcode(Z_Param_gcodeArray,Z_Param_prevIndex,Z_Param_linesPerTick,Z_Param_Out_lastPoint,Z_Param_moveStruct,Z_Param_Out_newIndex,Z_Param_Out_completed,Z_Param_Out_percentageProgress); \
	} \
 \
	DECLARE_FUNCTION(execgetAxisCoordinateCPP) \
	{ \
		P_GET_PROPERTY(UStrProperty,Z_Param_gcodeLine); \
		P_GET_PROPERTY(UStrProperty,Z_Param_axisPrefix); \
		P_GET_UBOOL_REF(Z_Param_Out_foundAxis); \
		P_FINISH; \
		*(float*)Z_Param__Result=UMyBlueprintFunctionLibrary::getAxisCoordinateCPP(Z_Param_gcodeLine,Z_Param_axisPrefix,Z_Param_Out_foundAxis); \
	}


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_INCLASS_NO_PURE_DECLS \
	private: \
	static void StaticRegisterNativesUMyBlueprintFunctionLibrary(); \
	friend GCODEVIEWER_API class UClass* Z_Construct_UClass_UMyBlueprintFunctionLibrary(); \
	public: \
	DECLARE_CLASS(UMyBlueprintFunctionLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/GCODEViewer"), NO_API) \
	DECLARE_SERIALIZER(UMyBlueprintFunctionLibrary) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_INCLASS \
	private: \
	static void StaticRegisterNativesUMyBlueprintFunctionLibrary(); \
	friend GCODEVIEWER_API class UClass* Z_Construct_UClass_UMyBlueprintFunctionLibrary(); \
	public: \
	DECLARE_CLASS(UMyBlueprintFunctionLibrary, UBlueprintFunctionLibrary, COMPILED_IN_FLAGS(0), 0, TEXT("/Script/GCODEViewer"), NO_API) \
	DECLARE_SERIALIZER(UMyBlueprintFunctionLibrary) \
	/** Indicates whether the class is compiled into the engine */ \
	enum {IsIntrinsic=COMPILED_IN_INTRINSIC};


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_STANDARD_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UMyBlueprintFunctionLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UMyBlueprintFunctionLibrary) \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UMyBlueprintFunctionLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UMyBlueprintFunctionLibrary); \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UMyBlueprintFunctionLibrary(const UMyBlueprintFunctionLibrary& InCopy); \
public:


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_ENHANCED_CONSTRUCTORS \
	/** Standard constructor, called after all reflected properties have been initialized */ \
	NO_API UMyBlueprintFunctionLibrary(const FObjectInitializer& ObjectInitializer = FObjectInitializer::Get()) : Super(ObjectInitializer) { }; \
private: \
	/** Private copy-constructor, should never be used */ \
	NO_API UMyBlueprintFunctionLibrary(const UMyBlueprintFunctionLibrary& InCopy); \
public: \
	DECLARE_VTABLE_PTR_HELPER_CTOR(NO_API, UMyBlueprintFunctionLibrary); \
DEFINE_VTABLE_PTR_HELPER_CTOR_CALLER(UMyBlueprintFunctionLibrary); \
	DEFINE_DEFAULT_OBJECT_INITIALIZER_CONSTRUCTOR_CALL(UMyBlueprintFunctionLibrary)


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_69_PROLOG
#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_GENERATED_BODY_LEGACY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_RPC_WRAPPERS \
	GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_INCLASS \
	GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_STANDARD_CONSTRUCTORS \
public: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#define GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_GENERATED_BODY \
PRAGMA_DISABLE_DEPRECATION_WARNINGS \
public: \
	GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_RPC_WRAPPERS_NO_PURE_DECLS \
	GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_INCLASS_NO_PURE_DECLS \
	GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h_72_ENHANCED_CONSTRUCTORS \
private: \
PRAGMA_ENABLE_DEPRECATION_WARNINGS


#undef CURRENT_FILE_ID
#define CURRENT_FILE_ID GCODEViewer_Source_GCODEViewer_MyBlueprintFunctionLibrary_h


#define FOREACH_ENUM_EPRINTMOVEENUM(op) \
	op(EPrintMoveEnum::PE_Travel) \
	op(EPrintMoveEnum::PE_Perimeter) \
	op(EPrintMoveEnum::PE_Infill) \
	op(EPrintMoveEnum::PE_Support) 
PRAGMA_ENABLE_DEPRECATION_WARNINGS
